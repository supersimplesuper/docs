name: CD

on:
  schedule:
    - cron:  '0 1 * * *'
  push:
    branches:
      - main

concurrency:
  group: "cd"
  cancel-in-progress: false

env:
  REPOSITORY_NAME: thesuperapi
  IMAGE_NAME: docs

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions: write-all
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "./website"
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=registry,ref=${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest,mode=max
          cache-from: type=registry,ref=${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::447066819406:role/github

      - name: Extract built docs from container
        run: |
          container_id=$(docker create "${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}")
          docker cp "$container_id:/usr/src/app/docs/.vitepress/dist" "./docs"
          docker cp "$container_id:/usr/src/app/postman_collection.json" "./docs"
          docker rm "$container_id"

      - name: Deploy docs to bucket
        run: |
          aws s3 sync --delete ./docs s3://ss-apps-production-docssuperapi-origin
